<script>
  class MarqueeManager {
    /**
     * Crea una nueva instancia de MarqueeManager.
     */
    constructor(contentElement, options = {}) {
      this.content = contentElement;
      this.options = {
        speed: options.speed || 20,
        padding: options.padding || 20,
        ...options,
      };
      this.originalText = this.content.innerHTML;
      this.repetitions = 0;
      this.init();
    }

    /**
     * Inicializa el contenido del marquee.
     */
    init() {
      this.updateContent();
      window.addEventListener('resize', this.updateContent.bind(this));
    }

    /**
     * Actualiza el contenido del marquee calculando las repeticiones necesarias.
     */
    updateContent() {
      const containerWidth = this.content.parentElement.offsetWidth;
      const item = this.content.children[0];

      if (!item) {
        console.warn("No se encontraron elementos secundarios en el contenido.");
        return;
      }

      const itemWidth = item.offsetWidth;

      if (itemWidth === 0) {
        this.applyInlineStyles();
        return;
      }

      const requiredRepetitions = Math.ceil((containerWidth * 2) / itemWidth) + 1;

      if (requiredRepetitions !== this.repetitions) {
        this.repetitions = requiredRepetitions;
        this.content.innerHTML = this.originalText.repeat(this.repetitions);
      }
    }

    /**
     * Aplica estilos en línea para garantizar que el contenido se muestre correctamente.
     */
    applyInlineStyles() {
      console.warn("Aplicando estilos en línea para corregir elementos con ancho cero.");
      this.content.style.whiteSpace = 'nowrap';
      this.content.style.display = 'inline-block';
      Array.from(this.content.children).forEach(child => {
        child.style.display = 'inline-block';
      });
    }

    /**
     * Destruye la instancia de MarqueeManager eliminando los event listeners.
     */
    destroy() {
      window.removeEventListener('resize', this.updateContent.bind(this));
    }
  }
</script>
